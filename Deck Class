
/****************************************************************
* Name: Nicholas Scaramuzzi Zachary Leesman
* Course: IOOP
* Section: 07
* Date: 12/13/15
****************************************************************
* ID: Lab# 7 Problem #1
* Purpose: The purpose of this class is to represent the deck of cards to be drawn from and the deck of cards consisting of
*playerâ€™s dropped cards. this Class also features many methods that shuffle add to the scrap deck and a method to swap
*the scrap deck with the empty deck of card that the players draw from.
*
****************************************************************
*When the deck runs out of cards it is swapped with the scrap deck 
*and  shuffled 
*this method allows for the game to be played for as many turns as needed to reach the target score
*The methods for adding cards to the scrap deck is located in here.
********************************************************
*/
import java.util.ArrayList;
import java.util.Collections;

public class Deck {
	ArrayList<String> deck;
	ArrayList<String> scrapDeck;
	Hand hand = new Hand();
	Deck(){
		//assigning card suits and numbers
		scrapDeck = new ArrayList<String>();
		deck = new ArrayList<String>();
		deck.add("Ace of Clubs");
		deck.add("Ace of Diamonds");
		deck.add("Ace of Hearts");
		deck.add("Ace of Spades");
		deck.add("2 of Clubs");
		deck.add("2 of Diamonds");
		deck.add("2 of Hearts");
		deck.add("2 of Spades");
		deck.add("3 of Clubs");
		deck.add("3 of Diamonds");
		deck.add("3 of Hearts");
		deck.add("3 of Spades");
		deck.add("4 of Clubs");
		deck.add("4 of Diamonds");
		deck.add("4 of Hearts");
		deck.add("4 of Spades");
		deck.add("5 of Clubs");
		deck.add("5 of Diamonds");
		deck.add("5 of Hearts");
		deck.add("5 of Spades");
		deck.add("6 of Clubs");
		deck.add("6 of Diamonds");
		deck.add("6 of Hearts");
		deck.add("6 of Spades");
		deck.add("7 of Clubs");
		deck.add("7 of Diamonds");
		deck.add("7 of Hearts");
		deck.add("7 of Spades");
		deck.add("8 of Clubs");
		deck.add("8 of Diamonds");
		deck.add("8 of Hearts");
		deck.add("8 of Spades");
		deck.add("9 of Clubs");
		deck.add("9 of Diamonds");
		deck.add("9 of Hearts");
		deck.add("9 of Spades");
		deck.add("10 of Clubs");
		deck.add("10 of Diamonds");
		deck.add("10 of Hearts");
		deck.add("10 of Spades");
		deck.add("Jack of Clubs");
		deck.add("Jack of Diamonds");
		deck.add("Jack of Hearts");
		deck.add("Jack of Spades");
		deck.add("Queen of Clubs");
		deck.add("Queen of Diamonds");
		deck.add("Queen of Hearts");
		deck.add("Queen of Spades");
		deck.add("King of Clubs");
		deck.add("King of Diamonds");
		deck.add("King of Hearts");
		deck.add("King of Spades");
		shuffle(deck);
		shuffle(deck);
		shuffle(deck);
	}
	
	void insertCard(String card){
		scrapDeck.add(card);
	}
	
	public String drawCard(){
		if(isEmpty()){
			swapDecks();
			return deck.get(deck.size());
			
		}else{
			return deck.get(deck.size()-1);
			
		}
	}
	
	private boolean isEmpty(){
		if(deck.isEmpty()){
			return true;
		}
		else{
			return false;
		}
	}
	private void swapDecks(){
		deck = (ArrayList<String>)scrapDeck.clone();
		scrapDeck.clear();
		shuffle(deck);
			
	}
	
	private void shuffle(ArrayList<String> deck){
		Collections.shuffle(deck);
		}
	public void removeCard(){
		deck.remove(deck.size()-1);
	}
	
}
